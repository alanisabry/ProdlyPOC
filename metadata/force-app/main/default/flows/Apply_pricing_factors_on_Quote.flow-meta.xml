<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <apiVersion>59.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Add_Indexation_Rates</name>
        <label>Add Indexation Rates</label>
        <locationX>754</locationX>
        <locationY>2414</locationY>
        <assignmentItems>
            <assignToReference>SumofIndexationRates</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Indexation_Rates.Indexation_Rate__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>LoopCount</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Indexation_Rates</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_movements</name>
        <label>Add movements</label>
        <locationX>680</locationX>
        <locationY>3722</locationY>
        <assignmentItems>
            <assignToReference>OppIndexationMovements</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_movements.Amount__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_movements</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_Previous_Indexation_to_ARR</name>
        <label>Add Previous Indexation to ARR</label>
        <locationX>700</locationX>
        <locationY>3998</locationY>
        <assignmentItems>
            <assignToReference>NewRenewalARR</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>previousIndexationapplied</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Upcoming_Indexation_Waived</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_price_uplift_to_ARR</name>
        <label>Add price uplift to ARR</label>
        <locationX>578</locationX>
        <locationY>4790</locationY>
        <assignmentItems>
            <assignToReference>renewalOpp.Price_Uplift_on_Renewal_percentage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>of_price_uplift_to_be_applied</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>renewalOpp.Price_Uplift_On_Renewal__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Apply_Price_Uplift</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>renewalupliftamount</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>priceupliftamount</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>NewRenewalARR</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>priceupliftapplied</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_or_Update_Quote</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_Upcoming_Indexation_to_ARR</name>
        <label>Add Upcoming Indexation to ARR</label>
        <locationX>908</locationX>
        <locationY>4406</locationY>
        <assignmentItems>
            <assignToReference>AppliedUpcomingIndexation</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CurrentIndexationRate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>upcomingindexationamount</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>upcomingIndexation</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>NewRenewalARR</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>upcomingindexationapplied</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Price_Uplift_applied</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Account_ID</name>
        <label>Assign Account ID</label>
        <locationX>314</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>accountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>renewalOpp.AccountId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Renewal_Upsell_Opps</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Account_ID_1</name>
        <label>Assign Account ID</label>
        <locationX>578</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>accountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Quote.AccountId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AdditionalModuleARR</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Quote.Upsell_ARR_during_renewal__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Account</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_ARR</name>
        <label>Assign ARR</label>
        <locationX>402</locationX>
        <locationY>674</locationY>
        <assignmentItems>
            <assignToReference>OppIdsList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_through_Opps.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_through_Opps</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_ARR_as_New_ARR</name>
        <label>Assign ARR as New ARR</label>
        <locationX>984</locationX>
        <locationY>3398</locationY>
        <assignmentItems>
            <assignToReference>NewRenewalARR</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>originalRenewalARR</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Upcoming_Indexation_Waived</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Current_Indexation_Rate</name>
        <label>Assign Current Indexation Rate</label>
        <locationX>710</locationX>
        <locationY>3098</locationY>
        <assignmentItems>
            <assignToReference>CurrentIndexationRate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Cap_Indexation_Rate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AppliedCapIndexationRate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Cap_Indexation_Rate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Previous_indexation_added</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Current_Indexation_Rate_1</name>
        <label>Assign Current Indexation Rate</label>
        <locationX>666</locationX>
        <locationY>2606</locationY>
        <assignmentItems>
            <assignToReference>CurrentIndexationRate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AvgIndexationRate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Input_Screen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Current_Indexation_Rate_2</name>
        <label>Assign Current Indexation Rate</label>
        <locationX>930</locationX>
        <locationY>2090</locationY>
        <assignmentItems>
            <assignToReference>CurrentIndexationRate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Account.Fixed_Indexation_Rate__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Input_Screen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_QLI_Values</name>
        <label>Assign QLI Values</label>
        <locationX>990</locationX>
        <locationY>5846</locationY>
        <assignmentItems>
            <assignToReference>Loop_QLI.Default_Price_ARR_One_off__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>updatedQLIDefaultPriceARR</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Loop_QLI.Sales_Price_ARR_One_off__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>updatedQLISalesPriceARR</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Loop_QLI.UnitPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>updatedQLISalesPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdatedQLILineItemList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_QLI</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_QLI</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Removed_QLI_Values</name>
        <label>Assign Removed QLI Values</label>
        <locationX>858</locationX>
        <locationY>6470</locationY>
        <assignmentItems>
            <assignToReference>Removed_QLI.Sales_Price_ARR_One_off__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>updatedQLISalesPriceARR</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Removed_QLI.Default_Price_ARR_One_off__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>updatedQLIDefaultPriceARR</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Removed_QLI.UnitPrice__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>updatedQLISalesPrice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>UpdatedRemovedQLILineItems</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Removed_QLI</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Removed_QLI</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Check_pricing_factors_applied</name>
        <label>Check pricing factors applied</label>
        <locationX>902</locationX>
        <locationY>5414</locationY>
        <assignmentItems>
            <assignToReference>Get_Quote.Pricing_Factors_Applied__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Quote</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Populate_Quote_ID</name>
        <label>Populate Quote ID</label>
        <locationX>418</locationX>
        <locationY>5306</locationY>
        <assignmentItems>
            <assignToReference>GetQuoteIdfromCreateQuote</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Create_Quote.QuoteId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Quote_confirmation</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Remove_price_uplift_from_ARR</name>
        <label>Remove price uplift from ARR</label>
        <locationX>842</locationX>
        <locationY>4790</locationY>
        <assignmentItems>
            <assignToReference>renewalOpp.Price_Uplift_on_Renewal_percentage__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>renewalOpp.Price_Uplift_On_Renewal__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Apply_Price_Uplift</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_or_Update_Quote</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Indexation_as_waived_on_Quote</name>
        <label>Set Indexation as waived on Quote</label>
        <locationX>644</locationX>
        <locationY>4298</locationY>
        <assignmentItems>
            <assignToReference>AppliedUpcomingIndexation</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AppliedCapIndexationRate</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <connector>
            <targetReference>Price_Uplift_applied</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Initial_Prices</name>
        <label>Set Initial Prices</label>
        <locationX>402</locationX>
        <locationY>1082</locationY>
        <assignmentItems>
            <assignToReference>InitialDefaultPriceQuote</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_OLIs.Total_Initial_Default_Price_ARR_One_off__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AdditionalModuleARR</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>AddlModuleARR</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_OLIs</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>ApplyUpcomingIndexation</name>
        <choiceText>Apply Upcoming Indexation</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Apply Upcoming Indexation</stringValue>
        </value>
    </choices>
    <choices>
        <name>No</name>
        <choiceText>No</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>false</stringValue>
        </value>
    </choices>
    <choices>
        <name>WaiveIndexation</name>
        <choiceText>Waive Indexation</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>Waive Indexation</stringValue>
        </value>
    </choices>
    <choices>
        <name>Yes</name>
        <choiceText>Yes</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue>true</stringValue>
        </value>
    </choices>
    <decisions>
        <name>Apply_Changes_to_Quote</name>
        <label>Apply Changes to Quote?</label>
        <locationX>1056</locationX>
        <locationY>5306</locationY>
        <defaultConnector>
            <targetReference>No_changes_in_pricing_factors</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Apply</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Apply_Changes</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Yes</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_pricing_factors_applied</targetReference>
            </connector>
            <label>Apply</label>
        </rules>
    </decisions>
    <decisions>
        <name>Apply_Re_Apply_Pricing_factors</name>
        <label>Apply/Re-Apply Pricing factors?</label>
        <locationX>842</locationX>
        <locationY>1574</locationY>
        <defaultConnector>
            <targetReference>Re_Generate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Re-Apply PF</defaultConnectorLabel>
        <rules>
            <name>Apply_PF</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Quote.Pricing_Factors_Applied__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Opportunity</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Initial_Screen</targetReference>
            </connector>
            <label>Apply PF</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check to see if indexation records are availble to calculate the variable indexation rate. If not, the pricing factors can not yet be applied.</description>
        <name>Are_rates_available</name>
        <label>Are rates available?</label>
        <locationX>490</locationX>
        <locationY>2198</locationY>
        <defaultConnector>
            <targetReference>Loop_Indexation_Rates</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>RatesNotAvailable</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Indexation_Rates</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Variable_rate_not_yet_available</targetReference>
            </connector>
            <label>Rates not available</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_cap_indexation_rate_exists</name>
        <label>Check if cap indexation rate exists?</label>
        <locationX>842</locationX>
        <locationY>2990</locationY>
        <defaultConnector>
            <targetReference>Previous_indexation_added</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Cap_exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Cap_Indexation_Rate</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Cap_Indexation_Rate</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>AvgIndexationRate</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Variable</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Current_Indexation_Rate</targetReference>
            </connector>
            <label>Cap % exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_changes_are_made</name>
        <label>Check if changes are made?</label>
        <locationX>1265</locationX>
        <locationY>5090</locationY>
        <defaultConnector>
            <targetReference>Pricing_factors_are_not_changed</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Pricing_factors_changed</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Added_Upcoming_Indexation</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Applied_to_renewal</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Waived</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Uplift_applied</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Uplift_reversed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Waive_Indexation</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Get_Quote.Waive_Indexation__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Apply_pricing_factors</targetReference>
            </connector>
            <label>Pricing factors changed</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if the indexation rate is variable or not.</description>
        <name>Check_if_indexation_is_variable</name>
        <label>Check if indexation is variable?</label>
        <locationX>842</locationX>
        <locationY>1982</locationY>
        <defaultConnector>
            <targetReference>Input_Screen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Variable</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Account.Indexation__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Account.Indexation_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Variable</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Account.Indexation__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>No</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Indexation_Rates</targetReference>
            </connector>
            <label>Variable</label>
        </rules>
        <rules>
            <name>Fixed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Account.Indexation__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Account.Indexation_Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Fixed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Account.Indexation__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>No</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Current_Indexation_Rate_2</targetReference>
            </connector>
            <label>Fixed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_indexation_movements_exist</name>
        <label>Check if indexation movements exist?</label>
        <locationX>700</locationX>
        <locationY>3506</locationY>
        <defaultConnector>
            <targetReference>Add_Previous_Indexation_to_ARR</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Movements_exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Previous_Contract_Indexation_Movements</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_movements</targetReference>
            </connector>
            <label>Movements exist</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_the_triggered_Object</name>
        <label>Check the triggered Object?</label>
        <locationX>446</locationX>
        <locationY>134</locationY>
        <defaultConnector>
            <targetReference>Get_Quote</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Quote</defaultConnectorLabel>
        <rules>
            <name>Opportunity</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recordId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>006</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Opportunity</targetReference>
            </connector>
            <label>Opportunity</label>
        </rules>
    </decisions>
    <decisions>
        <name>Create_or_Update_Quote</name>
        <label>Create or Update Quote</label>
        <locationX>842</locationX>
        <locationY>4982</locationY>
        <defaultConnector>
            <targetReference>Check_if_changes_are_made</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Update Quote</defaultConnectorLabel>
        <rules>
            <name>Create_Quote_with_PF</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Opportunity</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Quote_creation</targetReference>
            </connector>
            <label>Create Quote with PF</label>
        </rules>
    </decisions>
    <decisions>
        <name>Indexation_specified_on_account</name>
        <label>Indexation specified on account?</label>
        <locationX>446</locationX>
        <locationY>1466</locationY>
        <defaultConnector>
            <targetReference>Apply_Re_Apply_Pricing_factors</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Not_filled</name>
            <conditionLogic>(1 OR ((2 OR 3) AND 4)) AND 5</conditionLogic>
            <conditions>
                <leftValueReference>Get_Account.Indexation__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Account.Indexation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Yes</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Account.Indexation__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>After Initial Term</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Account.Indexation_Type__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Account.Platform__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Bynder</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Indexation_Not_Filled</targetReference>
            </connector>
            <label>Not filled</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if previous indexation is added on renewal or not.</description>
        <name>Previous_indexation_added</name>
        <label>Previous indexation added?</label>
        <locationX>842</locationX>
        <locationY>3290</locationY>
        <defaultConnector>
            <targetReference>Assign_ARR_as_New_ARR</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Applied_to_renewal</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_Account.Cumulative_Indexation__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>renewalOpp.Applied_Cumulative_Indexation__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Previous_Contract_Indexation_Movements</targetReference>
            </connector>
            <label>Applied to renewal</label>
        </rules>
    </decisions>
    <decisions>
        <name>Price_Uplift_applied</name>
        <label>Price Uplift applied?</label>
        <locationX>842</locationX>
        <locationY>4682</locationY>
        <defaultConnector>
            <targetReference>Create_or_Update_Quote</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Uplift_applied</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Apply_Price_Uplift</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Yes</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_price_uplift_to_ARR</targetReference>
            </connector>
            <label>Uplift applied</label>
        </rules>
        <rules>
            <name>Uplift_reversed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Apply_Price_Uplift</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>No</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Remove_price_uplift_from_ARR</targetReference>
            </connector>
            <label>Uplift reversed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Removed_QLI_exists</name>
        <label>Removed QLI exists?</label>
        <locationX>902</locationX>
        <locationY>6254</locationY>
        <defaultConnector>
            <targetReference>Final_Screen_1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Outcome_1_of_Removed_QLI_exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Removed_QLI</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Removed_QLI</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if the upcoming indexation is applied to the renewal or not.</description>
        <name>Upcoming_Indexation_applied</name>
        <label>Upcoming Indexation applied?</label>
        <locationX>1040</locationX>
        <locationY>4298</locationY>
        <defaultConnector>
            <targetReference>Price_Uplift_applied</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Added_Upcoming_Indexation</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Account.Indexation__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>No</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CurrentIndexationRate</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Upcoming_Indexation_to_ARR</targetReference>
            </connector>
            <label>Added Upcoming Indexation</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if the upcoming indexation on the renewal is waived or not.</description>
        <name>Upcoming_Indexation_Waived</name>
        <label>Upcoming Indexation Waived?</label>
        <locationX>842</locationX>
        <locationY>4190</locationY>
        <defaultConnector>
            <targetReference>Upcoming_Indexation_applied</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Waived</defaultConnectorLabel>
        <rules>
            <name>Waived</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Waive_Indexation</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Yes</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Waive_Indexation</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>First Year</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Indexation_as_waived_on_Quote</targetReference>
            </connector>
            <label>Waived</label>
        </rules>
    </decisions>
    <description>BODEV-4540 updated with check if variable indexation rate is available
This screen flow can be triggered from Opportunity or Quote and pricing factors are applied on the quote.</description>
    <dynamicChoiceSets>
        <name>IndexationWaiver</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Waive_Indexation__c</picklistField>
        <picklistObject>Opportunity</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>PriceUplift</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Price_Uplift_On_Renewal__c</picklistField>
        <picklistObject>Opportunity</picklistObject>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <name>AddlModuleARR</name>
        <dataType>Currency</dataType>
        <expression>IF(TEXT({!Loop_OLIs.Opportunity.Type})=&apos;Existing Business-Upsell&apos; &amp;&amp; {!Loop_OLIs.For_Renewal__c} &amp;&amp; (ISNULL({!Loop_OLIs.Initial_Default_Price_ARR_One_off__c}) || {!Loop_OLIs.Initial_Default_Price_ARR_One_off__c} = 0),
{!Loop_OLIs.Total_Sales_Price_ARR_Only__c},
0
)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>AvgIndexationRate</name>
        <dataType>Number</dataType>
        <expression>{!SumofIndexationRates}/{!LoopCount}</expression>
        <scale>1</scale>
    </formulas>
    <formulas>
        <name>cumulativeIndexation</name>
        <dataType>Currency</dataType>
        <expression>IF({!Apply_PF},
    {!originalRenewalARR}*{!CumulativeIndexationPercentage}/100,
    {!Get_Quote.Cumulative_Indexation_amount__c}
)</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <name>CumulativeIndexationPercentage</name>
        <dataType>Number</dataType>
        <expression>IF(NOT(ISNULL({!Get_Account.Cumulative_Indexation__c})),{!Get_Account.Cumulative_Indexation__c},{!renewalOpp.Applied_Cumulative_Indexation__c})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>defaultCapIndexationRate</name>
        <dataType>Number</dataType>
        <expression>IF({!Opportunity},
{!renewalOpp.Cap_Indexation_Rate__c},
{!Get_Quote.Cap_Indexation_Rate__c}
)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>defaultPriceUplift</name>
        <dataType>String</dataType>
        <expression>IF({!Opportunity},
TEXT({!renewalOpp.Price_Uplift_On_Renewal__c}),
TEXT({!Get_Quote.Price_Uplift_On_Renewal__c})
)</expression>
    </formulas>
    <formulas>
        <name>defaultPriceUpliftPercentage</name>
        <dataType>Number</dataType>
        <expression>IF({!Opportunity},
{!renewalOpp.Price_Uplift_on_Renewal_percentage__c},
{!Get_Quote.Price_Uplift_on_Renewal_percentage__c}
)</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>defaultWaiveIndexation</name>
        <dataType>String</dataType>
        <expression>IF({!Opportunity},
TEXT({!renewalOpp.Waive_Indexation__c}),
TEXT({!Get_Quote.Waive_Indexation__c})
)</expression>
    </formulas>
    <formulas>
        <name>indexationAvgEndDate</name>
        <dataType>Date</dataType>
        <expression>/* For orders before 2023, indexation rate should be average of Jan-Dec rates
From 2023, indexation rate should be average of Aug-Jul rates */
IF(YEAR({!renewalOpp.Startdate_contract__c}) &gt;=2023,
DATE(YEAR({!renewalOpp.Startdate_contract__c})-1,VALUE({!$Label.IndexationAvgEndMonth}),01),
DATE(YEAR({!renewalOpp.Startdate_contract__c})-1,VALUE(&apos;12&apos;),01)
)</expression>
    </formulas>
    <formulas>
        <name>indexationAvgStartDate</name>
        <dataType>Date</dataType>
        <expression>/* For orders before 2023, indexation rate should be average of Jan-Dec rates
From 2023, indexation rate should be average of Aug-Jul rates */
IF(YEAR({!renewalOpp.Startdate_contract__c}) &gt;= 2023,
DATE(YEAR({!renewalOpp.Startdate_contract__c})-2,VALUE({!$Label.IndexationAvgStartMonth}),01),
DATE(YEAR({!renewalOpp.Startdate_contract__c})-1,VALUE(&apos;01&apos;),01)
)</expression>
    </formulas>
    <formulas>
        <description>If the current indexation rate (Fixed/Variable) is more than 2%, the threshold of 2% should be applied to the default price of the product.</description>
        <name>IndexationThreshold</name>
        <dataType>Number</dataType>
        <expression>IF({!CurrentIndexationRate} &gt; 2, 2,{!CurrentIndexationRate})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>NewCumulativeOnAccount</name>
        <dataType>Number</dataType>
        <expression>IF({!Applied_to_renewal},null,{!Get_Account.Cumulative_Indexation__c})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>NewPriceUpliftOnAccount</name>
        <dataType>String</dataType>
        <expression>IF({!PriceUpliftOnAccountChanged},{!Apply_Price_Uplift},TEXT({!Get_Account.Price_Uplift_On_Renewal__c}))</expression>
    </formulas>
    <formulas>
        <name>NewPriceUpliftPercentageOnAccount</name>
        <dataType>Number</dataType>
        <expression>IF({!PriceUpliftOnAccountChanged},{!of_price_uplift_to_be_applied},{!Get_Account.Price_Uplift_on_Renewal_percentage__c})</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>originalRenewalARR</name>
        <dataType>Number</dataType>
        <expression>IF({!Apply_PF},
IF({!Opportunity},{!InitialDefaultPriceQuote},{!Get_Quote.Initial_Default_Price_ARR__c}),
    {!Get_Quote.Initial_Default_Price_ARR__c}
)</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <description>Calculate new ARR only when previous indexation is added on renewal.</description>
        <name>previousIndexationapplied</name>
        <dataType>Number</dataType>
        <expression>{!cumulativeIndexation}+{!originalRenewalARR}</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <name>priceupliftamount</name>
        <dataType>Currency</dataType>
        <expression>({!NewRenewalARR}*{!of_price_uplift_to_be_applied}/100)</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <name>priceupliftapplied</name>
        <dataType>Number</dataType>
        <expression>({!NewRenewalARR}*{!of_price_uplift_to_be_applied}/100)+{!NewRenewalARR}</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <name>PriceUpliftOnAccountChanged</name>
        <dataType>Boolean</dataType>
        <expression>IF(TEXT({!Get_Account.Price_Uplift_On_Renewal__c}) != {!Apply_Price_Uplift} || {!Get_Account.Price_Uplift_on_Renewal_percentage__c} != {!of_price_uplift_to_be_applied},
true,
false
)</expression>
    </formulas>
    <formulas>
        <name>priceupliftreversed</name>
        <dataType>Number</dataType>
        <expression>{!NewRenewalARR}-{!renewalOpp.Renewal_Uplift_amount__c}</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <description>Calculate Cumulative indexation to be applied on renewal</description>
        <name>QLICumulativeIndexation</name>
        <dataType>Currency</dataType>
        <expression>IF({!Applied_to_renewal},
     {!QLIOriginalPrice}*{!CumulativeIndexationPercentage}/100,
     IF(ISBLANK({!renewalOpp.Applied_Cumulative_Indexation__c}),0,
            {!QLIOriginalPrice}*{!renewalOpp.Applied_Cumulative_Indexation__c}/100
       )
)</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <name>QLIIndexationThresholdForDefaultPrice</name>
        <dataType>Currency</dataType>
        <expression>IF({!Added_Upcoming_Indexation},({!QLIOriginalPrice}+{!QLICumulativeIndexation})*{!IndexationThreshold}/100,0)</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <name>QLIOriginalPrice</name>
        <dataType>Currency</dataType>
        <expression>IF({!Outcome_1_of_Removed_QLI_exists},{!Removed_QLI.Initial_Default_Price_ARR_One_off__c},{!Loop_QLI.Initial_Default_Price_ARR_One_off__c}
)</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <name>QLIRenewalUplift</name>
        <dataType>Currency</dataType>
        <expression>IF({!Uplift_applied} ,({!QLIOriginalPrice}+{!QLICumulativeIndexation}+{!QLIUpcomingIndexation})*{!of_price_uplift_to_be_applied}/100,0)</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <name>QLIUpcomingIndexation</name>
        <dataType>Currency</dataType>
        <expression>IF({!Added_Upcoming_Indexation},({!QLIOriginalPrice}+{!QLICumulativeIndexation})*{!CurrentIndexationRate}/100,0)</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <name>RenewalinitialdefaultpriceARR</name>
        <dataType>Currency</dataType>
        <expression>IF(TEXT({!Loop_OLIs.Opportunity.Type})=&apos;Existing Business-Upsell&apos; &amp;&amp; {!Loop_OLIs.For_Renewal__c} &amp;&amp; {!Loop_OLIs.Quantity} &gt; 0,
0,
{!Loop_OLIs.Total_Initial_Default_Price_ARR_One_off__c}
)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>ScreenAccountCumulativeIndexation</name>
        <dataType>Number</dataType>
        <expression>IF(NOT(ISBLANK({!Get_Account.Cumulative_Indexation__c})),
       {!Get_Account.Cumulative_Indexation__c},
        IF(NOT(ISBLANK({!renewalOpp.Applied_Cumulative_Indexation__c})),
                   {!renewalOpp.Applied_Cumulative_Indexation__c},0)
)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>screenCumulativeIndexation</name>
        <dataType>Number</dataType>
        <expression>IF(NOT(ISBLANK({!Get_Quote.Applied_Cumulative_Indexation__c})),{!Get_Quote.Applied_Cumulative_Indexation__c},0)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>ScreenCumulativeIndexationAmount</name>
        <dataType>Number</dataType>
        <expression>{!cumulativeIndexation}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>ScreenPriceUplift</name>
        <dataType>Number</dataType>
        <expression>IF(NOT(ISBLANK({!Get_Quote.Price_Uplift_on_Renewal_percentage__c})),{!Get_Quote.Price_Uplift_on_Renewal_percentage__c},0)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>ScreenPriceUpliftOnAccount</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!Get_Account.Price_Uplift_On_Renewal__c},&apos;Yes&apos;),&apos;Yes&apos;,&apos;No&apos;)</expression>
    </formulas>
    <formulas>
        <name>ScreenPriceUpliftOnOpp</name>
        <dataType>String</dataType>
        <expression>IF(ISPICKVAL({!renewalOpp.Price_Uplift_On_Renewal__c},&apos;Yes&apos;),&apos;Yes&apos;,&apos;No&apos;)</expression>
    </formulas>
    <formulas>
        <name>ScreenRenewalARR</name>
        <dataType>Number</dataType>
        <expression>{!NewRenewalARR}+{!AdditionalModuleARR}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>ScreenRenewalUpliftAmount</name>
        <dataType>Number</dataType>
        <expression>{!priceupliftamount}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>ScreenUpcomingIndexation</name>
        <dataType>Number</dataType>
        <expression>IF(NOT(ISBLANK({!Get_Quote.Applied_Upcoming_Indexation__c})),{!Get_Quote.Applied_Upcoming_Indexation__c},0)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>ScreenUpcomingIndexationAmount</name>
        <dataType>Number</dataType>
        <expression>{!upcomingIndexation}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>ScreenUpliftPercentageAccount</name>
        <dataType>Number</dataType>
        <expression>IF(ISBLANK({!Get_Account.Price_Uplift_on_Renewal_percentage__c}),0,
{!Get_Account.Price_Uplift_on_Renewal_percentage__c}
)</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>upcomingIndexation</name>
        <dataType>Currency</dataType>
        <expression>{!NewRenewalARR}*({!CurrentIndexationRate}/100)</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <description>Calculate the new renewal ARR when upcoming indexation is applied</description>
        <name>upcomingindexationapplied</name>
        <dataType>Number</dataType>
        <expression>({!NewRenewalARR}*{!CurrentIndexationRate}/100)+{!NewRenewalARR}</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <name>upcomingIndexationDefaultValue</name>
        <dataType>String</dataType>
        <expression>IF({!Apply_PF},&apos;Yes&apos;,IF(NOT(ISBLANK({!renewalOpp.Applied_Upcoming_Indexation__c})),&apos;Yes&apos;,&apos;No&apos;))</expression>
    </formulas>
    <formulas>
        <name>updatedQLIDefaultPriceARR</name>
        <dataType>Currency</dataType>
        <expression>{!QLIOriginalPrice}+{!QLICumulativeIndexation}+{!QLIIndexationThresholdForDefaultPrice}</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <name>updatedQLISalesPrice</name>
        <dataType>Currency</dataType>
        <expression>{!updatedQLISalesPriceARR}/12</expression>
        <scale>8</scale>
    </formulas>
    <formulas>
        <name>updatedQLISalesPriceARR</name>
        <dataType>Currency</dataType>
        <expression>{!QLIOriginalPrice}+{!QLICumulativeIndexation}+{!QLIUpcomingIndexation}+{!QLIRenewalUplift}</expression>
        <scale>8</scale>
    </formulas>
    <interviewLabel>Apply pricing factors on Quote {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Apply pricing factors on Quote</label>
    <loops>
        <name>Loop_Indexation_Rates</name>
        <label>Loop Indexation Rates</label>
        <locationX>666</locationX>
        <locationY>2306</locationY>
        <collectionReference>Get_Indexation_Rates</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Add_Indexation_Rates</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Assign_Current_Indexation_Rate_1</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_movements</name>
        <label>Loop movements</label>
        <locationX>592</locationX>
        <locationY>3614</locationY>
        <collectionReference>Previous_Contract_Indexation_Movements</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Add_movements</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Add_Previous_Indexation_to_ARR</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_OLIs</name>
        <label>Loop OLIs</label>
        <locationX>314</locationX>
        <locationY>974</locationY>
        <collectionReference>Get_OLIs</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Set_Initial_Prices</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_Account</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_QLI</name>
        <label>Loop QLI</label>
        <locationX>902</locationX>
        <locationY>5738</locationY>
        <collectionReference>Get_Quote_line_items</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_QLI_Values</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_QLI</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_through_Opps</name>
        <label>Loop through Opps</label>
        <locationX>314</locationX>
        <locationY>566</locationY>
        <collectionReference>Get_Renewal_Upsell_Opps</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_ARR</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_OLIs</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Removed_QLI</name>
        <label>Removed QLI</label>
        <locationX>770</locationX>
        <locationY>6362</locationY>
        <collectionReference>Get_Removed_QLI</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Removed_QLI_Values</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Removed_QLI</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Account</name>
        <label>Get Account</label>
        <locationX>446</locationX>
        <locationY>1358</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Indexation_specified_on_account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>accountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Indexation_Rates</name>
        <label>Get Indexation Rates</label>
        <locationX>490</locationX>
        <locationY>2090</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Are_rates_available</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Subsidiary__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>renewalOpp.Account.Subsidiary_lookup__r.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Indexation_First_Date__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>indexationAvgStartDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Indexation_First_Date__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>indexationAvgEndDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Indexation_Rate__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Indexation_Rate__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Indexation_Rate__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_OLIs</name>
        <label>Get OLIs</label>
        <locationX>314</locationX>
        <locationY>866</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_OLIs</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OpportunityId</field>
            <operator>In</operator>
            <value>
                <elementReference>OppIdsList</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OpportunityLineItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Opportunity</name>
        <label>Get Opportunity</label>
        <locationX>314</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Account_ID</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <object>Opportunity</object>
        <outputReference>renewalOpp</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>ARR__c</queriedFields>
        <queriedFields>Price_Uplift_On_Renewal__c</queriedFields>
        <queriedFields>Price_Uplift_on_Renewal_percentage__c</queriedFields>
        <queriedFields>Waive_Indexation__c</queriedFields>
        <queriedFields>Pricing_factors_applied__c</queriedFields>
        <queriedFields>Original_Renewal_ARR__c</queriedFields>
        <queriedFields>Applied_Cumulative_Indexation__c</queriedFields>
        <queriedFields>Applied_Upcoming_Indexation__c</queriedFields>
        <queriedFields>Default_Price_ARR__c</queriedFields>
        <queriedFields>Total_Sales_Price__c</queriedFields>
        <queriedFields>Previous_Contract__c</queriedFields>
        <queriedFields>Indexation_reported_in_previous_contract__c</queriedFields>
        <queriedFields>AccountId</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>Startdate_contract__c</queriedFields>
        <queriedFields>End_date_contract__c</queriedFields>
        <queriedFields>Cap_Indexation_Rate__c</queriedFields>
        <queriedFields>Upcoming_Indexation_amount__c</queriedFields>
        <queriedFields>Cumulative_Indexation_amount__c</queriedFields>
        <queriedFields>Renewal_Uplift_amount__c</queriedFields>
        <queriedFields>CurrencyIsoCode</queriedFields>
        <queriedFields>Platform__c</queriedFields>
        <queriedFields>Initial_Default_Price_ARR__c</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Quote</name>
        <label>Get Quote</label>
        <locationX>578</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Renewal</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Quote</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Quote_line_items</name>
        <label>Get Quote line items</label>
        <locationX>902</locationX>
        <locationY>5630</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_QLI</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>QuoteId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Quote.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>For_Renewal__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Renewal_OLI_ID__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>QuoteLineItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Removed_QLI</name>
        <label>Get Removed QLI</label>
        <locationX>902</locationX>
        <locationY>6146</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Removed_QLI_exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Quote__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Quote.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Renewal_OLI_ID__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Removed_Quote_line_Item__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Renewal</name>
        <label>Get Renewal</label>
        <locationX>578</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Account_ID_1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Quote.OpportunityId</elementReference>
            </value>
        </filters>
        <object>Opportunity</object>
        <outputReference>renewalOpp</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>ARR__c</queriedFields>
        <queriedFields>Price_Uplift_On_Renewal__c</queriedFields>
        <queriedFields>Price_Uplift_on_Renewal_percentage__c</queriedFields>
        <queriedFields>Waive_Indexation__c</queriedFields>
        <queriedFields>Pricing_factors_applied__c</queriedFields>
        <queriedFields>Original_Renewal_ARR__c</queriedFields>
        <queriedFields>Applied_Cumulative_Indexation__c</queriedFields>
        <queriedFields>Applied_Upcoming_Indexation__c</queriedFields>
        <queriedFields>Default_Price_ARR__c</queriedFields>
        <queriedFields>Total_Sales_Price__c</queriedFields>
        <queriedFields>Previous_Contract__c</queriedFields>
        <queriedFields>Indexation_reported_in_previous_contract__c</queriedFields>
        <queriedFields>AccountId</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>Startdate_contract__c</queriedFields>
        <queriedFields>End_date_contract__c</queriedFields>
        <queriedFields>Cap_Indexation_Rate__c</queriedFields>
        <queriedFields>Upcoming_Indexation_amount__c</queriedFields>
        <queriedFields>Cumulative_Indexation_amount__c</queriedFields>
        <queriedFields>Renewal_Uplift_amount__c</queriedFields>
        <queriedFields>CurrencyIsoCode</queriedFields>
        <queriedFields>Platform__c</queriedFields>
        <queriedFields>Initial_Default_Price_ARR__c</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Renewal_Upsell_Opps</name>
        <label>Get Renewal &amp; Upsell Opps</label>
        <locationX>314</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_through_Opps</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>renewalOpp.AccountId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Startdate_contract__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>renewalOpp.Startdate_contract__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Closed Won</stringValue>
            </value>
        </filters>
        <filters>
            <field>StageName</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Closed Lost</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Previous_Contract_Indexation_Movements</name>
        <label>Previous Contract Indexation Movements</label>
        <locationX>700</locationX>
        <locationY>3398</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_indexation_movements_exist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Opportunity__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>renewalOpp.Previous_Contract__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Movement_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Indexation</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Active</stringValue>
            </value>
        </filters>
        <filters>
            <field>Order__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Opportunity_ARR_Movement__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_QLI</name>
        <label>Update QLI</label>
        <locationX>902</locationX>
        <locationY>6038</locationY>
        <connector>
            <targetReference>Get_Removed_QLI</targetReference>
        </connector>
        <inputReference>UpdatedQLILineItemList</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Quote</name>
        <label>Update Quote</label>
        <locationX>902</locationX>
        <locationY>5522</locationY>
        <connector>
            <targetReference>Get_Quote_line_items</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Quote.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Applied_Cumulative_Indexation__c</field>
            <value>
                <elementReference>Get_Account.Cumulative_Indexation__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Applied_Upcoming_Indexation__c</field>
            <value>
                <elementReference>AppliedUpcomingIndexation</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Cap_Indexation_Rate__c</field>
            <value>
                <elementReference>AppliedCapIndexationRate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Indexation_reported_in_previous_contract__c</field>
            <value>
                <elementReference>OppIndexationMovements</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Price_Uplift_On_Renewal__c</field>
            <value>
                <elementReference>Apply_Price_Uplift</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Price_Uplift_on_Renewal_percentage__c</field>
            <value>
                <elementReference>of_price_uplift_to_be_applied</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Waive_Indexation__c</field>
            <value>
                <elementReference>Waive_Indexation</elementReference>
            </value>
        </inputAssignments>
        <object>Quote</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Removed_QLI</name>
        <label>Update Removed QLI</label>
        <locationX>770</locationX>
        <locationY>6662</locationY>
        <connector>
            <targetReference>Final_Screen_1</targetReference>
        </connector>
        <inputReference>UpdatedRemovedQLILineItems</inputReference>
    </recordUpdates>
    <runInMode>SystemModeWithSharing</runInMode>
    <screens>
        <name>Apply_pricing_factors</name>
        <label>Apply pricing factors</label>
        <locationX>1056</locationX>
        <locationY>5198</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Apply_Changes_to_Quote</targetReference>
        </connector>
        <fields>
            <name>Confirm_Screen</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;The new renewal ARR will be &lt;/span&gt;&lt;strong style=&quot;font-size: 13px;&quot;&gt;{!Get_Quote.CurrencyIsoCode} {!ScreenRenewalARR}&lt;/strong&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 13px;&quot;&gt;&lt;em&gt;Pricing factors to be applied :&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Original Renewal ARR : &lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!Get_Quote.CurrencyIsoCode} &lt;/strong&gt;&lt;strong&gt; {!Get_Quote.Initial_Default_Price_ARR__c}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>AddlModulesARR</name>
            <fieldText>&lt;p&gt;ARR from Upsell : &lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;{!Get_Quote.CurrencyIsoCode}  {!AdditionalModuleARR}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>cumulative</name>
            <fieldText>&lt;p&gt;Cumulative Indexation  {!Get_Account.Cumulative_Indexation__c}% : &lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!Get_Quote.CurrencyIsoCode}&lt;/strong&gt;&lt;strong&gt; {!ScreenCumulativeIndexationAmount}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Account.Cumulative_Indexation__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Waive</name>
            <fieldText>&lt;p&gt;Waive Indexation? : &lt;strong&gt;{!Waive_Indexation}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Waive_Indexation</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Upcoming</name>
            <fieldText>&lt;p&gt;Upcoming Indexation {!CurrentIndexationRate}% : &lt;strong style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;{!Get_Quote.CurrencyIsoCode} &lt;/strong&gt;&lt;strong&gt;{!upcomingindexationamount}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Waive_Indexation</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>No</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>CurrentIndexationRate</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>renewaluplift</name>
            <fieldText>&lt;p&gt;Renewal Uplift {!of_price_uplift_to_be_applied}% : &lt;strong&gt;{!renewalOpp.CurrencyIsoCode} {!renewalupliftamount}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Apply_Price_Uplift</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>caution</name>
            <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Do you want to apply the specified scenario to the Quote and Products?&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt; You can still change the price from the above price through negotiation.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;Product prices changed manually before the simulation will not be considered while calculating the new Renewal ARR.&lt;/li&gt;&lt;/ul&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Apply_Changes</name>
            <choiceReferences>PriceUplift</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Apply Changes?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <nextOrFinishButtonLabel>Confirm</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Final_Screen_1</name>
        <label>Final Screen</label>
        <locationX>902</locationX>
        <locationY>6854</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ConfirmationScreen_1</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(42, 127, 86);&quot;&gt;Pricing factors are applied to Quote successfully.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Indexation_Not_Filled</name>
        <label>Indexation Not Filled</label>
        <locationX>50</locationX>
        <locationY>1574</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>notfillederror</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(255, 0, 0);&quot;&gt;Indexation information is not filled on the account, please contact the legal team.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;color: rgb(255, 0, 0);&quot;&gt;Once the information is filled, retry the process to apply the pricing factors.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Initial_Screen</name>
        <label>Initial Screen</label>
        <locationX>842</locationX>
        <locationY>1874</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Check_if_indexation_is_variable</targetReference>
        </connector>
        <fields>
            <name>OpportunityInfo</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(50, 45, 137);&quot;&gt;Opportunity Information:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Opportunity Name : &lt;/strong&gt;{!renewalOpp.Name}&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Opportunity ARR : &lt;/strong&gt;{!renewalOpp.CurrencyIsoCode} {!renewalOpp.ARR__c}&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Price Uplift on renewal? : &lt;/strong&gt;{!ScreenPriceUpliftOnOpp}&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Price Uplift on Renewal % :  &lt;/strong&gt;{!ScreenPriceUplift}%&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Indexation waived on renewal ? : &lt;/strong&gt;{!renewalOpp.Waive_Indexation__c}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Opportunity</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>QuoteInfo</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(50, 45, 137);&quot;&gt;Quote Information:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Quote Name : &lt;/strong&gt;{!Get_Quote.Name}&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Quote ARR : &lt;/strong&gt;{!Get_Quote.CurrencyIsoCode} {!Get_Quote.ARR__c}&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Price Uplift on renewal? : &lt;/strong&gt;{!Get_Quote.Price_Uplift_On_Renewal__c}&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Price Uplift on Renewal % :  &lt;/strong&gt;{!ScreenPriceUplift}%&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Indexation waived on renewal ? : &lt;/strong&gt;{!Get_Quote.Waive_Indexation__c}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Opportunity</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Account_Info</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(50, 45, 137);&quot;&gt;Account Information:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Indexation : &lt;/strong&gt;{!Get_Account.Indexation__c}&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Indexation Type : &lt;/strong&gt;{!Get_Account.Indexation_Type__c}&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;Cumulative Indexation on account : &lt;/strong&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;{!ScreenAccountCumulativeIndexation}%&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;Price Uplift On Renewal? :  &lt;/strong&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;{!ScreenPriceUpliftOnAccount}&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;Price Uplift on Renewal % :  &lt;/strong&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;{!ScreenUpliftPercentageAccount}%&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Next</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Input_Screen</name>
        <label>Input Screen</label>
        <locationX>842</locationX>
        <locationY>2882</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Check_if_cap_indexation_rate_exists</targetReference>
        </connector>
        <fields>
            <name>of_AddIndexationText</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;font-size: 13px;&quot;&gt;Cumulative indexation rate ({!CumulativeIndexationPercentage}%) will be applied to product pricing.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Account.Cumulative_Indexation__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>renewalOpp.Applied_Cumulative_Indexation__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>WaiveIndexationText</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;Apply upcoming indexation rate ({!CurrentIndexationRate}%) to product pricing? Or waive?&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Account.Indexation__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>No</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>CurrentIndexationRate</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Get_Account.Indexation__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>indexationwaived</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Indexation is waived on the renewal, would you like to change the decision?&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 AND 2) OR (3 AND 4)</conditionLogic>
                <conditions>
                    <leftValueReference>renewalOpp.Waive_Indexation__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Apply_PF</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Get_Quote.Waive_Indexation__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Apply_PF</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Waive_Indexation</name>
            <choiceReferences>IndexationWaiver</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>defaultWaiveIndexation</elementReference>
            </defaultValue>
            <fieldText>Waive Indexation?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <helpText>&lt;p&gt;When &apos;Yes&apos; is selected, indexation is waived for the entire renewal contract period.&lt;/p&gt;&lt;p&gt;When &apos;No&apos; is selected, indexation is charged in each year of the renewal contract.&lt;/p&gt;&lt;p&gt;When &apos;First Year&apos; is selected, indexation is waived for first year of the renewal.&lt;/p&gt;</helpText>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND 3</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Account.Indexation__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Get_Account.Indexation__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>After Initial Term</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>CurrentIndexationRate</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>CapRate</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Would you like to apply Cap to the Variable indexation rate on the renewal?&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Variable</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Waive_Indexation</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>No</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Cap_Indexation_Rate</name>
            <dataType>Number</dataType>
            <defaultValue>
                <elementReference>defaultCapIndexationRate</elementReference>
            </defaultValue>
            <fieldText>Cap Indexation Rate</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;If the Cap Indexation Rate is lower than the Upcoming indexation rate, Cap indexation rate is applied as current indexation rate on renewal pricing.&lt;/p&gt;</helpText>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <scale>0</scale>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Variable</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Waive_Indexation</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>No</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>renewalupliftapplied</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Renewal uplift is already applied, would you like to change the decision?&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 AND 2) OR (3 AND 4)</conditionLogic>
                <conditions>
                    <leftValueReference>renewalOpp.Price_Uplift_On_Renewal__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Apply_PF</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Get_Quote.Price_Uplift_On_Renewal__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Apply_PF</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>of_priceupliftText</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Renewal uplift is not applied, would you like to apply? If yes, how much %?&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 AND 2) OR (3 AND 4)</conditionLogic>
                <conditions>
                    <leftValueReference>renewalOpp.Price_Uplift_On_Renewal__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Apply_PF</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Get_Quote.Price_Uplift_On_Renewal__c</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Apply_PF</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Apply_Price_Uplift</name>
            <choiceReferences>PriceUplift</choiceReferences>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>defaultPriceUplift</elementReference>
            </defaultValue>
            <fieldText>Apply Price Uplift?</fieldText>
            <fieldType>DropdownBox</fieldType>
            <helpText>&lt;p&gt;Price uplift decision applied in this screen will be synced to the account and opportunity.&lt;/p&gt;</helpText>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>of_price_uplift_to_be_applied</name>
            <dataType>Number</dataType>
            <defaultValue>
                <elementReference>defaultPriceUpliftPercentage</elementReference>
            </defaultValue>
            <fieldText>% of price uplift to be applied?</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Price uplift % applied in this screen will be synced to the account and opportunity.&lt;/span&gt;&lt;/p&gt;</helpText>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <scale>2</scale>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Apply_Price_Uplift</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <nextOrFinishButtonLabel>Simulate New ARR</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>No_changes_in_pricing_factors</name>
        <label>No changes in pricing factors</label>
        <locationX>1210</locationX>
        <locationY>5414</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>Nochangesinsimulation</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(75, 33, 231);&quot;&gt;Pricing factors are not applied to the Quote. Click &apos;Finish&apos; to complete the process.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Pricing_factors_are_not_changed</name>
        <label>Pricing factors are not changed</label>
        <locationX>1474</locationX>
        <locationY>5198</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>NoChanges</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(40, 57, 208);&quot;&gt;&lt;span class=&quot;ql-cursor&quot;&gt;﻿&lt;/span&gt;Pricing factors are not changed during the process to generate the new renewal ARR.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Quote_confirmation</name>
        <label>Quote confirmation</label>
        <locationX>418</locationX>
        <locationY>5414</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>Copy_1_of_ConfirmationScreen_1</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(42, 127, 86);&quot;&gt;Quote has been created and pricing factors are applied on the Quote.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>RedirectToQuote</name>
            <extensionName>c:FlowRedirectCmp</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>recId</name>
                <value>
                    <elementReference>GetQuoteIdfromCreateQuote</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Quote_creation</name>
        <label>Quote creation</label>
        <locationX>418</locationX>
        <locationY>5090</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Create_Quote</targetReference>
        </connector>
        <fields>
            <name>ConfirmScreen</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;The new renewal ARR will be &lt;/span&gt;&lt;strong style=&quot;font-size: 13px;&quot;&gt;{!renewalOpp.CurrencyIsoCode} {!ScreenRenewalARR}&lt;/strong&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 13px;&quot;&gt;&lt;em&gt;Pricing factors to be applied :&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Original Renewal ARR : &lt;strong&gt;{!renewalOpp.CurrencyIsoCode} {!InitialDefaultPriceQuote}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>AdditionalARR</name>
            <fieldText>&lt;p&gt;ARR from Upsell : &lt;strong style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;{!renewalOpp.CurrencyIsoCode}  &lt;/strong&gt;&lt;strong&gt;{!AdditionalModuleARR}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>AdditionalModuleARR</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <numberValue>0.0</numberValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Copy_1_of_cumulative</name>
            <fieldText>&lt;p&gt;Cumulative Indexation  {!CumulativeIndexationPercentage}% : &lt;strong&gt;{!renewalOpp.CurrencyIsoCode} {!ScreenCumulativeIndexationAmount}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>Get_Account.Cumulative_Indexation__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>renewalOpp.Applied_Cumulative_Indexation__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Copy_1_of_Waive</name>
            <fieldText>&lt;p&gt;Waive Indexation? : &lt;strong&gt;{!Waive_Indexation}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Waive_Indexation</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Copy_1_of_Upcoming</name>
            <fieldText>&lt;p&gt;Upcoming Indexation {!CurrentIndexationRate}% : &lt;strong&gt;{!renewalOpp.CurrencyIsoCode} {!upcomingindexationamount}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Waive_Indexation</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>No</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>CurrentIndexationRate</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Copy_1_of_renewaluplift</name>
            <fieldText>&lt;p&gt;Renewal Uplift {!of_price_uplift_to_be_applied}% : &lt;strong&gt;{!renewalOpp.CurrencyIsoCode} {!renewalupliftamount}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Apply_Price_Uplift</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Yes</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <nextOrFinishButtonLabel>Create Quote</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Re_Generate</name>
        <label>Re-Generate</label>
        <locationX>930</locationX>
        <locationY>1682</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <backButtonLabel>Cancel</backButtonLabel>
        <connector>
            <targetReference>Initial_Screen</targetReference>
        </connector>
        <fields>
            <name>Confirmation_check</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;﻿&lt;/strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Would you like to update the pricing factors on the renewal?&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;ARR On Quote : &lt;/strong&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!Get_Quote.CurrencyIsoCode} &lt;/span&gt;{!Get_Quote.ARR__c} &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Applied Cumulative Indexation : &lt;/strong&gt;{!screenCumulativeIndexation}%&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Applied Upcoming Indexation :&lt;/strong&gt; {!ScreenUpcomingIndexation}%&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Applied Price Uplift :&lt;/strong&gt; {!ScreenPriceUplift}%&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Update Pricing Factors</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Variable_rate_not_yet_available</name>
        <label>Variable rate not yet available</label>
        <locationX>314</locationX>
        <locationY>2306</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>rates_not_available</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;This renewal only starts in the next year (start date: {!renewalOpp.Startdate_contract__c}) . Therefore the variable indexation rate is not yet known. This will become available from 1st of September. Please reach out to finance to ask for an alternative.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>320</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_the_triggered_Object</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Create_Quote</name>
        <label>Create Quote</label>
        <locationX>418</locationX>
        <locationY>5198</locationY>
        <connector>
            <targetReference>Populate_Quote_ID</targetReference>
        </connector>
        <flowName>Create_Quote_from_Opportunity</flowName>
        <inputAssignments>
            <name>accountRecord</name>
            <value>
                <elementReference>Get_Account</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>AdditionalModulesARR</name>
            <value>
                <elementReference>AdditionalModuleARR</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>CapIndexationRate</name>
            <value>
                <elementReference>Cap_Indexation_Rate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>cumulativeIndexationApplied</name>
            <value>
                <elementReference>Applied_to_renewal</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>CurrentIndexationRate</name>
            <value>
                <elementReference>CurrentIndexationRate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>IndexationThreshold</name>
            <value>
                <elementReference>IndexationThreshold</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>NewCumulativeOnAccount</name>
            <value>
                <elementReference>NewCumulativeOnAccount</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>NewPriceUpliftOnAccount</name>
            <value>
                <elementReference>NewPriceUpliftOnAccount</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>NewPriceUpliftPercentageOnAccount</name>
            <value>
                <elementReference>of_price_uplift_to_be_applied</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>upcomingIndexationApplied</name>
            <value>
                <elementReference>Added_Upcoming_Indexation</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>upliftApplied</name>
            <value>
                <elementReference>Uplift_applied</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>waiveIndexation</name>
            <value>
                <elementReference>Waive_Indexation</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <name>accountId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>AdditionalModuleARR</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>AppliedCapIndexationRate</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>AppliedUpcomingIndexation</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>CurrentIndexationRate</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>GetQuoteIdfromCreateQuote</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>InitialDefaultPriceQuote</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>LoopCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>NewRenewalARR</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>8</scale>
    </variables>
    <variables>
        <name>OppIdsList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>OppIndexationMovements</name>
        <dataType>Currency</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>8</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>renewalOpp</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <name>renewalOppProducts</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityLineItem</objectType>
    </variables>
    <variables>
        <name>renewalupliftamount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>SumofIndexationRates</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>upcomingindexationamount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>UpdatedQLILineItemList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>QuoteLineItem</objectType>
    </variables>
    <variables>
        <name>UpdatedRemovedQLILineItems</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Removed_Quote_line_Item__c</objectType>
    </variables>
</Flow>
